---
title: "Differential Gene Expression"
subtitle: "RAdelaide 2024"
author: "Dr Stevie Pederson"
institute: |
  | Black Ochre Data Labs
  | Telethon Kids Institute
date: "2024-07-11"
date-format: long
bibliography: bibliography.bib
title-slide-attributes:
    data-background-color: "#3d3d40"
    data-background-image: assets/bodl_logo_white_background.jpg
    data-background-opacity: "0.3"
    data-background-size: "90%"
editor: source
format:
  revealjs:
    theme: [bodl.scss]
    code-line-numbers: false
    width: 1280
    height: 720
    sansfont: Times New Roman
    logo: assets/bodl_logo_white_background.jpg
    slide-number: c
    show-slide-number: all
  html:
    css: [bodl.scss, extra.css]
    output-file: deg.html
    embed-resources: true
    toc: true
    toc-depth: 1
include-after: |
  <script type="text/javascript">
    Reveal.on('ready', event => {
      if (event.indexh === 0) {
        document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
      }
    });
    Reveal.addEventListener('slidechanged', (event) => {
      if (event.indexh === 0) {
        Reveal.configure({ slideNumber: null });
        document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
      }
      if (event.indexh === 1) {
        Reveal.configure({ slideNumber: 'c' });
        document.querySelector("div.has-logo > img.slide-logo").style.display = null;
      }
    });
  </script>
knitr:
  opts_chunk:
    echo: true
    include: true
    warning: false
    message: false
    fig.align: center
    fig.height: 6
    fig.width: 8
---

# Differential Gene Expression {background-color="#3c3c44" background-image=https://raw.githubusercontent.com/Bioconductor/BiocStickers/devel/edgeR/edgeR.png background-size="30%" background-opacity="0.4" background-position='80% 50%'}

```{r, echo=FALSE}
options(width = 100)
```

## Differential Gene Expression

- The most common question: <br>*Which genes change expression levels in response to a treatment?*

. . .

- Need to perform a statistical test on each gene
    + Select genes-of-interest using some criteria

. . .

- Dealing with count data $\implies$ can't be Normally distributed
- Generally assumed to have a Negative Binomial distribution
    + Essentially a Poisson distribution with additional variability   

## Today's Data

- Data obtained from Gene Expression Omnibus [GSE171742](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE171742)
- Stem cell derived cardiomyocytes with 4 treatment groups [@Liu2023-qu]
- All transfected using lentivral vectors

. . .

1. Control
2. Nsp6 over-expression
3. Nsp8 over-expression
4. M over-expression


## Today's Data

![](assets/Liu_paper.png){fig-align="left"}

## Today's Data

- Well documented [metadata](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5233239)! &#129299;
- We know exact versions of all tools and annotations

![](assets/GEO_description.png){.absolute left=0 bottom=100 width=1000}

## Loading Packages


```{r packages}
library(tidyverse)
library(edgeR)
library(AnnotationHub)
library(rtracklayer)
library(plyranges)
```

## Getting Annotations

- Which one shall we choose?

::: {style="font-size: 90%;"}

```{r ah, cache=TRUE}
ah <- AnnotationHub()
ah %>% subset(dataprovider == "Gencode" & genome == "GRCh38") %>% query("v31")
```

:::

## Loading Packages

::: {style="font-size: 95%;"}

```{r genes, cache=TRUE}
gtf <- ah[["AH75121"]] # This will take several minutes
genes <- gtf %>% 
  filter(type == "gene") %>% 
  select(starts_with("gene"))
genes
```

:::

## Loading Counts

- Data is exactly as produced by `featureCounts` [@Liao2014-gy]
    + Tab-delimited but with some weird columns
- Let's have a sneak preview

. . .

```{r}
read_tsv("data/GSE171742_counts.out.gz", n_max = 6)
```

. . .

Which columns do we need? How would you parse them?

## Loading Counts

- The best form for counts is as a matrix

```{r}
counts <- read_tsv("data/GSE171742_counts.out.gz") %>% 
  dplyr::select(Geneid, contains("_")) %>% 
  as.data.frame() %>% 
  column_to_rownames("Geneid") %>% 
  as.matrix()
glimpse(counts)
```

## Checking Annotations

- Compare these with the annotations we have

```{r}
setdiff(rownames(counts), genes$gene_id)
```

::: {.notes}
- If we're doing everything, we don't need to check these
- Only for public data. Annotations can be difficult to untangle
:::

- Should we remove the suffixes?

## Checking Annotations

```{r}
genes %>% subset(gene_id == "ENSG00000002586.20")
```

- How can we resolve this?

## Checking Annotations

```{r}
genes <- genes %>% 
  mutate(
    gene_id = case_when(
      duplicated(gene_id) ~ paste0(gene_id, "_PAR_Y"),
      TRUE ~ gene_id
    )
  ) 
subset(genes, duplicated(gene_id))
```


# Working With Count Data {background-color="#3c3c44" background-image=https://raw.githubusercontent.com/Bioconductor/BiocStickers/devel/edgeR/edgeR.png background-size="30%" background-opacity="0.4" background-position='80% 50%'}

## DGEList Objects

- We'll use `edgeR` for DGE analysis [@edgeR2010]
- Counts, sample metadata and gene annotations stored in a single `S4` object
    + `DGEList`: Digital Gene Expression List
    + Gene & metadata elements need to be `data.frame` objects
    + Will be coerced if able

## DGEList Objects

- How can we get sample metadata?

```{r}
samples <- tibble(id = colnames(counts)) %>% 
  separate(id, into = c("replicate", "treatment"), remove = FALSE)
samples
```

- Will be in the same order as `counts`

## DGEList Objects

- Annotations appear to match the counts
    + Counts for `r nrow(counts)` genes
    + Annotations for `r length(genes)` genes
- But will be in a different order
    + Counts in order of name
    + Annotations in genomic order

## DGEList Objects
    
```{r}
genes %>% setNames(.$gene_id) %>% .[rownames(counts)]
```

## DGEList Objects

```{r}
dge <- DGEList(
  counts = counts,
  samples = samples,
  genes = genes %>% 
    setNames(.$gene_id) %>% 
    .[rownames(counts)] %>% 
    as.data.frame(row.names = names(.))
)
dge
```

## DGEList Objects

- Key elements have different but related dimensions

```{r}
dim(dge)
dim(dge$counts)
dim(dge$samples)
dim(dge$genes)
```

- `samples` is column metadata $\implies$ `genes` is row metadata

## References

    
